generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum TransactionType {
  INCOME
  EXPENSE
}

enum ExpenseCategory {
  NEEDS
  WANTS
  SAVINGS
}

model AppUser {
  id            String         @id @default(uuid())
  fullName      String         @map("full_name")
  email         String         @unique
  password      String
  createdAt     DateTime       @default(now()) @map("created_at")
  updatedAt     DateTime       @updatedAt @map("updated_at")
  refreshTokens RefreshToken[]
  transactions  Transaction[]

  @@map("app_user")
}

model RefreshToken {
  token     String   @id @default(uuid())
  revoked   Boolean  @default(false)
  expiresAt DateTime @map("expires_at")
  user      AppUser  @relation(fields: [userId], references: [id])
  userId    String   @map("user_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("refresh_token")
}

model Transaction {
  id          String           @id @default(uuid())
  title       String
  amount      Decimal          @db.Decimal(10, 2)
  type        TransactionType
  date        DateTime         @db.Date
  description String?
  category    ExpenseCategory?
  user        AppUser          @relation(fields: [userId], references: [id])
  userId      String           @map("user_id")
  createdAt   DateTime         @default(now()) @map("created_at")
  updatedAt   DateTime         @updatedAt @map("updated_at")

  @@index([userId, date])
  @@index([userId, type, date, category])
  @@map("transaction")
}
